'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wsTimbrado33
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsTimbrado33Soap", [Namespace]:="www.facturaselectronicascfdi.com")>  _
    Partial Public Class wsTimbrado33
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private Timbrar33OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SellarTimbrar33OperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.WindowsApplication1.My.MySettings.Default.WindowsApplication1_wsTimbrado33_wsTimbrado33
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event Timbrar33Completed As Timbrar33CompletedEventHandler
        
        '''<remarks/>
        Public Event SellarTimbrar33Completed As SellarTimbrar33CompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.facturaselectronicascfdi.com/Timbrar33", RequestNamespace:="www.facturaselectronicascfdi.com", ResponseNamespace:="www.facturaselectronicascfdi.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Timbrar33(ByVal curCorreo As String, ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal xml() As Byte, ByVal Proceso As String) As resultado33
            Dim results() As Object = Me.Invoke("Timbrar33", New Object() {curCorreo, password, xml, Proceso})
            Return CType(results(0),resultado33)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Timbrar33Async(ByVal curCorreo As String, ByVal password As String, ByVal xml() As Byte, ByVal Proceso As String)
            Me.Timbrar33Async(curCorreo, password, xml, Proceso, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Timbrar33Async(ByVal curCorreo As String, ByVal password As String, ByVal xml() As Byte, ByVal Proceso As String, ByVal userState As Object)
            If (Me.Timbrar33OperationCompleted Is Nothing) Then
                Me.Timbrar33OperationCompleted = AddressOf Me.OnTimbrar33OperationCompleted
            End If
            Me.InvokeAsync("Timbrar33", New Object() {curCorreo, password, xml, Proceso}, Me.Timbrar33OperationCompleted, userState)
        End Sub
        
        Private Sub OnTimbrar33OperationCompleted(ByVal arg As Object)
            If (Not (Me.Timbrar33CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Timbrar33Completed(Me, New Timbrar33CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.facturaselectronicascfdi.com/SellarTimbrar33", RequestNamespace:="www.facturaselectronicascfdi.com", ResponseNamespace:="www.facturaselectronicascfdi.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SellarTimbrar33(ByVal curCorreo As String, ByVal password As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal xml() As Byte, ByVal Proceso As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal CerFile() As Byte, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal KeyFile() As Byte, ByVal PassCsd As String) As resultado33
            Dim results() As Object = Me.Invoke("SellarTimbrar33", New Object() {curCorreo, password, xml, Proceso, CerFile, KeyFile, PassCsd})
            Return CType(results(0),resultado33)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SellarTimbrar33Async(ByVal curCorreo As String, ByVal password As String, ByVal xml() As Byte, ByVal Proceso As String, ByVal CerFile() As Byte, ByVal KeyFile() As Byte, ByVal PassCsd As String)
            Me.SellarTimbrar33Async(curCorreo, password, xml, Proceso, CerFile, KeyFile, PassCsd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SellarTimbrar33Async(ByVal curCorreo As String, ByVal password As String, ByVal xml() As Byte, ByVal Proceso As String, ByVal CerFile() As Byte, ByVal KeyFile() As Byte, ByVal PassCsd As String, ByVal userState As Object)
            If (Me.SellarTimbrar33OperationCompleted Is Nothing) Then
                Me.SellarTimbrar33OperationCompleted = AddressOf Me.OnSellarTimbrar33OperationCompleted
            End If
            Me.InvokeAsync("SellarTimbrar33", New Object() {curCorreo, password, xml, Proceso, CerFile, KeyFile, PassCsd}, Me.SellarTimbrar33OperationCompleted, userState)
        End Sub
        
        Private Sub OnSellarTimbrar33OperationCompleted(ByVal arg As Object)
            If (Not (Me.SellarTimbrar33CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SellarTimbrar33Completed(Me, New SellarTimbrar33CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.facturaselectronicascfdi.com")>  _
    Partial Public Class resultado33
        
        Private selloField As String
        
        Private erroresField As String
        
        Private xmlSelladoField() As Byte
        
        Private acuseField() As Byte
        
        Private arregloAcuseField()() As Byte
        
        Private cadenaOriginalField As String
        
        Private fechaHoraTimbradoField As Date
        
        Private fechaHoraTimbradoFieldSpecified As Boolean
        
        Private fechaHoraTimbradoSpecified1Field As Boolean
        
        Private folioUUIDField As String
        
        Private pDFField() As Byte
        
        Private selloDigitalEmisorField As String
        
        Private selloDigitalTimbreSATField As String
        
        Private xMLField() As Byte
        
        '''<remarks/>
        Public Property sello() As String
            Get
                Return Me.selloField
            End Get
            Set
                Me.selloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errores() As String
            Get
                Return Me.erroresField
            End Get
            Set
                Me.erroresField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property xmlSellado() As Byte()
            Get
                Return Me.xmlSelladoField
            End Get
            Set
                Me.xmlSelladoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property acuse() As Byte()
            Get
                Return Me.acuseField
            End Get
            Set
                Me.acuseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property arregloAcuse() As Byte()()
            Get
                Return Me.arregloAcuseField
            End Get
            Set
                Me.arregloAcuseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cadenaOriginal() As String
            Get
                Return Me.cadenaOriginalField
            End Get
            Set
                Me.cadenaOriginalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property fechaHoraTimbrado() As Date
            Get
                Return Me.fechaHoraTimbradoField
            End Get
            Set
                Me.fechaHoraTimbradoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property fechaHoraTimbradoSpecified() As Boolean
            Get
                Return Me.fechaHoraTimbradoFieldSpecified
            End Get
            Set
                Me.fechaHoraTimbradoFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("fechaHoraTimbradoSpecified")>  _
        Public Property fechaHoraTimbradoSpecified1() As Boolean
            Get
                Return Me.fechaHoraTimbradoSpecified1Field
            End Get
            Set
                Me.fechaHoraTimbradoSpecified1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property folioUUID() As String
            Get
                Return Me.folioUUIDField
            End Get
            Set
                Me.folioUUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property PDF() As Byte()
            Get
                Return Me.pDFField
            End Get
            Set
                Me.pDFField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property selloDigitalEmisor() As String
            Get
                Return Me.selloDigitalEmisorField
            End Get
            Set
                Me.selloDigitalEmisorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property selloDigitalTimbreSAT() As String
            Get
                Return Me.selloDigitalTimbreSATField
            End Get
            Set
                Me.selloDigitalTimbreSATField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property XML() As Byte()
            Get
                Return Me.xMLField
            End Get
            Set
                Me.xMLField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub Timbrar33CompletedEventHandler(ByVal sender As Object, ByVal e As Timbrar33CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Timbrar33CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As resultado33
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),resultado33)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub SellarTimbrar33CompletedEventHandler(ByVal sender As Object, ByVal e As SellarTimbrar33CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SellarTimbrar33CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As resultado33
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),resultado33)
            End Get
        End Property
    End Class
End Namespace
